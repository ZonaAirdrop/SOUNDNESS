#!/usr/bin/env bash
set -e

GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

sleep 2
# Menghapus bagian logo yang sebelumnya dipanggil dengan curl
# curl -s https://raw.githubusercontent.com/bangpateng/logo/refs/heads/main/logo.sh | bash
sleep 1

auto_install() {
  echo -e "${GREEN} Auto installing Soundness...${NC}" && echo

  BASE_DIR=$HOME
  SOUNDNESS_DIR=${SOUNDNESS_DIR-"$BASE_DIR/.soundness"}
  SOUNDNESS_BIN_DIR="$SOUNDNESS_DIR/bin"
  BIN_URL="https://raw.githubusercontent.com/soundnesslabs/soundness-layer/main/soundnessup/soundnessup"
  BIN_PATH="$SOUNDNESS_BIN_DIR/soundnessup"

  mkdir -p $SOUNDNESS_BIN_DIR
  curl -# -L $BIN_URL -o $BIN_PATH
  chmod +x $BIN_PATH

  case $SHELL in
    */zsh)
      PROFILE=${ZDOTDIR-"$HOME"}/.zshenv
      PREF_SHELL=zsh
      ;;
    */bash)
      PROFILE=$HOME/.bashrc
      PREF_SHELL=bash
      ;;
    */fish)
      PROFILE=$HOME/.config/fish/config.fish
      PREF_SHELL=fish
      ;;
    */ash)
      PROFILE=$HOME/.profile
      PREF_SHELL=ash
      ;;
    *)
      echo -e "${RED}soundnessup: could not detect shell, manually add ${SOUNDNESS_BIN_DIR} to your PATH.${NC}"
      exit 1
  esac

  if [[ ":$PATH:" != *":${SOUNDNESS_BIN_DIR}:"* ]]; then
    echo >> $PROFILE && echo "export PATH=\"\$PATH:$SOUNDNESS_BIN_DIR\"" >> $PROFILE
  fi

  source "$PROFILE"

  echo && echo -e "${BLUE} Installing required build tools...${NC}"
  if [ $(id -u) -eq 0 ]; then
      apt-get update && apt-get install -y build-essential pkg-config libssl-dev
  else
      echo -e "${RED}You need root privileges to install build tools.${NC}"
      echo -e "${YELLOW}Please run: sudo apt-get update && sudo apt-get install -y build-essential pkg-config libssl-dev${NC}"
      echo -e "${YELLOW}Then run this script again.${NC}"
      exit 1
  fi

  if ! command -v rustc &> /dev/null; then
      echo -e "${BLUE}2. Installing Rust and Cargo...${NC}"
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      source "$HOME/.cargo/env"
  else
      echo -e "${GREEN}‚úÖ Rust is already installed${NC}"
  fi

  echo -e "${BLUE} Installing Soundness CLI...${NC}"
  soundnessup install

  echo -e "${YELLOW}Waiting for installation to complete...${NC}"
  sleep 5

  export PATH="$PATH:$HOME/.cargo/bin"

  SOUNDNESS_CLI=""
  for path in "$HOME/.cargo/bin/soundness-cli" "/usr/local/bin/soundness-cli" "$SOUNDNESS_BIN_DIR/soundness-cli"; do
      if [ -x "$path" ]; then
          SOUNDNESS_CLI="$path"
          break
      fi
  done

  if [ -z "$SOUNDNESS_CLI" ]; then
      echo -e "${YELLOW}‚ùå Could not find soundness-cli. Searching filesystem...${NC}"
      FOUND_CLI=$(find "$HOME/.cargo/bin" "$HOME" "/usr/local/bin" -name "soundness-cli" -type f -executable 2>/dev/null | head -1)

      if [ -n "$FOUND_CLI" ]; then
          SOUNDNESS_CLI="$FOUND_CLI"
      else
          echo -e "${RED}‚ùå Could not find soundness-cli. Key generation will be skipped.${NC}"
          exit 1
      fi
  fi

  echo -e "${GREEN} Found soundness-cli at: $SOUNDNESS_CLI${NC}"

  echo -e "${BLUE}üßπ Cleaning any existing keys...${NC}"
  KEY_NAME="my-key"
  KEY_LOCATIONS=(
    "$HOME/.soundness/keys"
    "$HOME/.config/soundness/keys"
    "$HOME/.local/share/soundness/keys"
  )

  for loc in "${KEY_LOCATIONS[@]}"; do
    if [ -d "$loc" ]; then
      rm -f "$loc/$KEY_NAME.pub" 2>/dev/null || true
      rm -f "$loc/$KEY_NAME.key" 2>/dev/null || true
    fi
  done

  find "$HOME" -name "$KEY_NAME.pub" -o -name "$KEY_NAME.key" -delete 2>/dev/null || true

  echo -e "${GREEN} Generating fresh key pair...${NC}"
  "$SOUNDNESS_CLI" generate-key --name "$KEY_NAME"

  echo && echo -e "${RED}üîê IMPORTANT: Make sure to save your mnemonic phrase from above!${NC}"
  echo -e "${RED}It's your only way to recover your key if lost.${NC}"

  echo && echo -e "${GREEN}ÔøΩ Done! Use your public key to register for testnet with on Discord: !access <your-public-key>${NC}"
}

# Menjalankan auto_install secara otomatis tanpa prompt dan tanpa exit
auto_install
